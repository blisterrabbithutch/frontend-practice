// Topics
- асинхронные модули
- сборка вебпак
- тс

- роутинг
- подключение препроцессора
- подключение переменных стилей и тем

- вынесение провайдера в хук для смены тем
- кондишн классы для стилизации (classNames хелпер)

- рефакторинг архитектуры на FSD
- added FSD to project. refactored routes. created absolute paths in webpack config. added aliases
- отрефакторен роутер в рамках архитектуры FSD - добавлен роутер конфиг

- добавлены shared компоненты для развития своего UI кита. типизированы.
- добавлены кастомные темы, вариации внешнего вида и состояния для shared компонентов

- кнопка переключения темы перенесена в виджет
- добавлена поддержка свг-графики и типов для TS любых файлов
- добавлен shared компонент кнопки поддерживающий разные темы и варианты отрисовки. ТИПИЗИРОВАН используя реакт типы

- добавлен сайдбар с mod условными классами для хелпера classNames


- i18n добавление
- определение isDev режима для debug режима shared модуля i18n (webpack DefinePlugin - declared ts module for dev-variable)


- webpack hot module replacement - позволяет обновить приложение после изменений в коде без перезагрузки страницы


- ESLint настройка. создание правил, выбор основного набора.

- ESLint for SCSS: Stylelint. i18next eslint. prohibited text in jsx without translation

- JEST тесты. настройка сборки (babel + TS + jest custom path). unit tests for classNames

- Router: added rule to 404 unexisting route. shared Page Loader implemented


- ErrorBoundary.

- анализ размера бандла. BundleAnalyzer

- React Testing Library: Тесты компонентов. Добавлены абсолютные импорты в окружение Jest. Настроено окружение Jest - пути, scss

- Storybook - настройка. адаптирован к тс, абс путям, цсс модулям, работе с свг.настройка абсолютного импорта в окружении storybook. Storybook decorators - для избавления от импорта css-переменных в каждый сторис styleDecorator
- ThemeDecorator для storybook - для тем. применение декоратора темы для варианта компонента баттон.
- добавление поддержки svg в окружении Storybook. Создание декоратора для роутов для навбар - RouteDecorator
- созданы стори для баттон сайдбар и навбар.
- создан сторис под ErrorPage. 
- создан сторис под AppLink, Loader, ThemeSwitcher
- создан сторис под AboutPage, MainPage, NotFoundPage

- Loki - скриншотные тесты - регрессионное тестирование. новый функционал не сломал старый. сравнивает верстку со старой существующий на момент создания снепшота.

- CI Pipeline. Script actions before commits
- добавили CI пайплайн для организации проверки пайплайном скриптом при работе в сайдбренчах.


- дописан сайдбар. 
- добавлены CI пайплайн для параллельного запуска команд чтобы не последовательно запускались команды (если одна упадет - дальше не пойдет проверка пайплайна)
- добавлен универсальный враппер для тестов оборачивающий все компоненты
- Screenshot UI TEST REPORT - test:ui:report

-- РАБОТА С ДАННЫМИ

- REACT PORTAL: created modal with states as shared component - создано через портал.
- настроен линтер для поддержки использования хуков в функциональных компонентах
- fix ThemeProvider, ThemeDecorator


- подключен Redux ToolKit. добавлена обертка стора для сторибук и тестов - StoreProvider
- Базовый пример - создаются src/entities под каждую сущность - Counter. Типизирован.
- покрытие unit-тестами Redux селекторов: getCounter через DeepPartial, getCounterValue
- unit-тесты на reducer в counterSlice -> decrement, increment.
- Написан Компонентный тест использующий стор Redux и проверяющий верстку


- фикс для стилей модального окна.
- Работа с данными. JSON Server. Создание простой авторизации к локальному серверу с бд.


- Создана сущность User для RTK. добавлен в общий StateSchema. объединение редьюсеров в общий.
- создание feature для взаимодействия слоев -> authByUsername
- модальное окно формы авторизации + сторибук
- компонент Input + сторибук


- Husky как замена GitHub Actions - precommit actions


- Создание Формы Авторизации - loginSlice RTK - feature authByUsername. 
- подключение асинхронного редюсера. 
- Async Thunk - Создание асинхронного экшна. (model/services/loginByUsername) 
- интеграция в форму авторизации готовой связки + автоматическая авторизация через локалСторадж
- Создание shared Text компонента.
- StoreDecorator для сторибук - для отрисовки компонента через стейт
- __IS_DEV__ прокидываем из вебпак в сторибук


- оптимизация бандла. асинхронный LoginForm - bundleAnalyzer итоговый бандл делим на асинхронные. Компонент вынесли. Вынесен код редьюсера LoginForm в его асинхронный чанк - Code Splitting -> ReducerManager.ts
- т.е. в момент монтирования компонента добавляется его редьюсер и стор, при демонтировании удаляем (ОПЦИОНАЛЬНО)
- вынесена логика добавления редьюсера в переиспользуемый компонент (shared/lib/components/DynamicModuleLoader)
- добавлена поддержка асинхронных редьюсеров для сторибук в StoreDecorator



// cmds
npm run start
npx webpack
npm run unit
npm run build:dev

юи тест - 
npm run test:ui:report
npm run test:ui:ok


// FSD архитектура подготовка.

classic:
pages
components
helpers
api

fsd слои:
app -> providers, errorBoundary, context etc
*processes
pages -> widgets + features
widgets -> features
features -> entities
entities -> user, post, comment -> ui, model, api
shared - из одного проекта можно перекинуть в другой.

каждый слой состоит из слайсов
каждый слайс из сегментов